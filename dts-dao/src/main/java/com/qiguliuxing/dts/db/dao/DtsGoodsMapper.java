package com.qiguliuxing.dts.db.dao;

import com.qiguliuxing.dts.db.domain.*;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;

@Repository
public interface DtsGoodsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    long countByExample(DtsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    int deleteByExample(DtsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    int insert(DtsGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    int insertSelective(DtsGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    DtsGoods selectOneByExample(DtsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    DtsGoods selectOneByExampleSelective(@Param("example") DtsGoodsExample example, @Param("selective") DtsGoods.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    DtsGoods selectOneByExampleWithBLOBs(DtsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    List<DtsGoods> selectByExampleSelective(@Param("example") DtsGoodsExample example, @Param("selective") DtsGoods.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    List<DtsGoods> selectByExampleWithBLOBs(DtsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    List<DtsGoods> selectByExample(DtsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    DtsGoods selectByPrimaryKeySelective(@Param("id") Integer id, @Param("selective") DtsGoods.Column ... selective);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    DtsGoods selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    DtsGoods selectByPrimaryKeyWithLogicalDelete(@Param("id") Integer id, @Param("andLogicalDeleted") boolean andLogicalDeleted);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") DtsGoods record, @Param("example") DtsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    int updateByExampleWithBLOBs(@Param("record") DtsGoods record, @Param("example") DtsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") DtsGoods record, @Param("example") DtsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(DtsGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(DtsGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(DtsGoods record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    int logicalDeleteByExample(@Param("example") DtsGoodsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dts_goods
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    int logicalDeleteByPrimaryKey(Integer id);

    /**
     * 查询商铺可上商品类型
     * @param shopId
     * @return
     */
    List<DtsGoodsType> selectShopGoodsPermission(@Param("shopId") Integer shopId);

    /**
     * 查询商铺拥有平台类目列表
     * @param shopId
     * @return
     */
    List<DtsCategory> selectCategory(Integer shopId);

    /**
     * 查询软文
     * @param name
     * @param sort
     * @param order
     * @return
     */
    List<DtsTourismAttack> queryTrourismAttack(@Param("name") String name,@Param("sort") String sort,@Param("order") String order);


    /**
     * 添加软文数据
     * @param dtsTourismAttack
     * @return
     */
    void insertTourismAttack(DtsTourismAttack dtsTourismAttack);

    /**
     * 修改软文数据
     * @param dtsTourismAttack
     */
    void updateTourismAttack(DtsTourismAttack dtsTourismAttack);

    /**
     * 删除软文
     * @param id
     */
    void deletetourism(@Param("id") Integer id);

    /**
     * 查询软文详情
     * @param id
     * @return
     */
    DtsTourismAttack selectTourismAttackById(@Param("id") Integer id);

    /**
     * 查询所有商品集合
     * @return
     */
    List<DtsGoods> selectAll();

    /**
     * 批量更新商品上下架状态
     * @param goodsList
     * @return
     */
    Integer updateGoodsList(@Param("list") List<DtsGoods> goodsList);

    /**
     * 更新商品上下架状态
     * @param dtsGoods
     * @return
     */
    Integer updateIsOnSale(DtsGoods dtsGoods);
}