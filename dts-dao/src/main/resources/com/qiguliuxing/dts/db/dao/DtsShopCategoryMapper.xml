<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiguliuxing.dts.db.dao.DtsShopCategoryMapper">
  <resultMap id="BaseResultMap" type="com.qiguliuxing.dts.db.domain.DtsShopCategoryEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords"/>
    <result column="desc" jdbcType="VARCHAR" property="desc"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="icon_url" jdbcType="VARCHAR" property="iconUrl"/>
    <result column="pic_url" jdbcType="VARCHAR" property="picUrl"/>
    <result column="pid" jdbcType="INTEGER" property="pid"/>
    <result column="level" jdbcType="VARCHAR" property="level"/>
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder"/>
    <result column="shop_id" jdbcType="INTEGER" property="shopId"/>
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>

  <resultMap id="ShopBaseResultMap" type="com.qiguliuxing.dts.db.domain.DtsShop">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName"/>
    <result column="shop_introduction" jdbcType="VARCHAR" property="shopIntroduction"/>
    <result column="business_license" jdbcType="VARCHAR" property="businessLicense"/>
    <result column="shop_keeper_num" jdbcType="VARCHAR" property="shopKeeperNum"/>
    <result column="logo_url" jdbcType="VARCHAR" property="logoUrl"/>
    <result column="address" jdbcType="VARCHAR" property="address"/>
    <result column="id_card_positive" jdbcType="VARCHAR" property="idCardPositive"/>
    <result column="id_card_obverse" jdbcType="VARCHAR" property="idCardObverse"/>
    <result column="business_license_num" jdbcType="VARCHAR" property="businessLicenseNum"/>
    <result column="business_license_start" jdbcType="VARCHAR" property="businessLicenseStart" />
    <result column="business_license_end" jdbcType="VARCHAR" property="businessLicenseEnd" />
    <result column="business_license_url" jdbcType="VARCHAR" property="businessLicenseUrl" />
    <result column="shop_type" jdbcType="BIT" property="shopType" />
    <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="legal_person" jdbcType="VARCHAR" property="legalPerson" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="shop_pic" jdbcType="VARCHAR" property="shopPic" />
    <result column="is_popularity" jdbcType="BIT" property="isPopularity" />
    <result column="is_hot" jdbcType="BIT" property="isHot" />
    <result column="is_popularity_value" jdbcType="INTEGER" property="isPopularityValue" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, shop_id,add_time,update_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from dts_shop_category
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByExample" parameterType="com.qiguliuxing.dts.db.domain.DtsShopCategoryEntityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dts_shop_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <insert id="insertSelective" parameterType="com.qiguliuxing.dts.db.domain.DtsShopCategoryEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dts_shop_category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="iconUrl != null">
        icon_url,
      </if>
      <if test="picUrl != null">
        pic_url,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="iconUrl != null">
        #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=TINYINT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.qiguliuxing.dts.db.domain.DtsShopCategoryEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dts_shop_category
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null">
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="iconUrl != null">
        icon_url = #{iconUrl,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null">
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=TINYINT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectShopCategoryByExample" parameterType="com.qiguliuxing.dts.db.domain.DtsShopCategoryEntityExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dts_shop_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, `name`, keywords, `desc`, pid, icon_url, pic_url, `level`, sort_order, add_time,
        update_time, deleted,shop_id
      </otherwise>
    </choose>
    from dts_shop_category
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>

  <select id="selectShopListByCategoryId" parameterType="java.lang.Integer" resultMap="ShopBaseResultMap">
    SELECT
        ds.*
    FROM
        dts_category dc
        RIGHT JOIN dts_shop_area dsa ON dc.id = dsa.category_id
        LEFT JOIN dts_shop ds ON ds.id = dsa.shop_id
    WHERE
        dc.id = #{categoryId}
  </select>

  <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update dts_shop_category set deleted = 1
    where id = #{id}
  </update>
</mapper>